name: Build nightly container image
on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
permissions:
  contents: read
  packages: write

jobs:
  compute-suffix:
    runs-on: ubuntu-latest
    steps:
      - id: version_vars
        env:
          TZ: Etc/UTC
        run: |
          # Determine image suffix based on branch
          BRANCH_NAME="${{ github.ref_name }}"
          DATE_SUFFIX="nightly.$(date +'%Y-%m-%d')"
          
          echo "Branch: $BRANCH_NAME"
          echo "Date suffix: $DATE_SUFFIX"
          
          if [[ "$BRANCH_NAME" == "basic" ]]; then
            echo "patchwork_dashboard_version_prerelease=${DATE_SUFFIX}-basic" >> $GITHUB_OUTPUT
            echo "docker_repo=newsmast/patchwork_dashboard_basic" >> $GITHUB_OUTPUT
            echo "ghcr_repo=ghcr.io/patchwork-hub/patchwork_dashboard_basic" >> $GITHUB_OUTPUT
            echo "Building for basic branch"
            echo "Prerelease version will be: ${DATE_SUFFIX}-basic"
          elif [[ "$BRANCH_NAME" == "mvp" ]]; then
            echo "patchwork_dashboard_version_prerelease=${DATE_SUFFIX}-mvp" >> $GITHUB_OUTPUT
            echo "docker_repo=newsmast/patchwork_dashboard_mvp" >> $GITHUB_OUTPUT
            echo "ghcr_repo=ghcr.io/patchwork-hub/patchwork_dashboard_mvp" >> $GITHUB_OUTPUT
            echo "Building for mvp branch"
            echo "Prerelease version will be: ${DATE_SUFFIX}-mvp"
          else
            echo "patchwork_dashboard_version_prerelease=${DATE_SUFFIX}" >> $GITHUB_OUTPUT
            echo "docker_repo=newsmast/patchwork_dashboard" >> $GITHUB_OUTPUT
            echo "ghcr_repo=ghcr.io/patchwork-hub/patchwork_dashboard" >> $GITHUB_OUTPUT
            echo "Building for default branch: $BRANCH_NAME"
            echo "Prerelease version will be: ${DATE_SUFFIX}"
          fi
          
          # Debug output
          echo "Final outputs:"
          echo "prerelease=$(grep 'patchwork_dashboard_version_prerelease=' $GITHUB_OUTPUT | cut -d'=' -f2)"
          echo "docker_repo=$(grep 'docker_repo=' $GITHUB_OUTPUT | cut -d'=' -f2)"
    outputs:
      prerelease: ${{ steps.version_vars.outputs.patchwork_dashboard_version_prerelease }}
      docker_repo: ${{ steps.version_vars.outputs.docker_repo }}
      ghcr_repo: ${{ steps.version_vars.outputs.ghcr_repo }}

  build-image:
    needs: compute-suffix
    uses: ./.github/workflows/build-container-image.yml
    with:
      file_to_build: Dockerfile
      cache: false
      push_to_images: |
        ${{ needs.compute-suffix.outputs.docker_repo }}
        ${{ needs.compute-suffix.outputs.ghcr_repo }}
      version_prerelease: ${{ needs.compute-suffix.outputs.prerelease }}
      labels: |
        org.opencontainers.image.description=Nightly build image used for testing purposes
      flavor: |
        latest=auto
      tags: |
        type=raw,value=edge
        type=raw,value=nightly
        type=raw,value=${{ needs.compute-suffix.outputs.prerelease }}
        type=raw,value=debug-${{ github.run_number }}
    secrets: inherit